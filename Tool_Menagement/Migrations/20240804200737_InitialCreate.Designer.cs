// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tool_Menagement.Models;

#nullable disable

namespace Tool_Menagement.Migrations
{
    [DbContext(typeof(ToolsBaseContext))]
    [Migration("20240804200737_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Kategorium", b =>
                {
                    b.Property<int>("IdKategorii")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Kategorii");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKategorii"));

                    b.Property<string>("MaterialWykonania")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Material_wykonania");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Przeznaczenie")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("IdKategorii")
                        .HasName("PK__Kategori__E2A56928B2A8F3CE");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Magazyn", b =>
                {
                    b.Property<int>("PozycjaMagazynowa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Pozycja_magazynowa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PozycjaMagazynowa"));

                    b.Property<int>("CyklRegeneracji")
                        .HasColumnType("int")
                        .HasColumnName("Cykl_regeneracji");

                    b.Property<int>("IdNarzedzia")
                        .HasColumnType("int")
                        .HasColumnName("Id_narzedzia");

                    b.Property<bool>("Regeneracja")
                        .HasColumnType("bit");

                    b.Property<int>("Trwalosc")
                        .HasColumnType("int");

                    b.Property<int>("Uzycie")
                        .HasColumnType("int");

                    b.Property<bool>("Wycofany")
                        .HasColumnType("bit");

                    b.HasKey("PozycjaMagazynowa")
                        .HasName("PK__Magazyn__78B0461F242BAAD7");

                    b.HasIndex("IdNarzedzia");

                    b.ToTable("Magazyn", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.NarzedziaTechnologium", b =>
                {
                    b.Property<int>("IdNarzedzia")
                        .HasColumnType("int")
                        .HasColumnName("Id_narzedzia");

                    b.Property<int>("IdTechnologi")
                        .HasColumnType("int")
                        .HasColumnName("Id_technologi");

                    b.Property<int>("CzasPracy")
                        .HasColumnType("int")
                        .HasColumnName("Czas_pracy");

                    b.HasKey("IdNarzedzia", "IdTechnologi")
                        .HasName("PK__Narzedzi__6ED7F3187D2CDCAB");

                    b.HasIndex("IdTechnologi");

                    b.ToTable("Narzedzia_Technologia", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.Narzedzie", b =>
                {
                    b.Property<int>("IdNarzedzia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_narzedzia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNarzedzia"));

                    b.Property<int>("IdKategorii")
                        .HasColumnType("int")
                        .HasColumnName("Id_Kategorii");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("Srednica")
                        .HasColumnType("float");

                    b.HasKey("IdNarzedzia")
                        .HasName("PK__Narzedzi__B019BBBC628096CC");

                    b.HasIndex("IdKategorii");

                    b.ToTable("Narzedzie", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.Rejestracja", b =>
                {
                    b.Property<int>("IdPozycji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_pozycji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPozycji"));

                    b.Property<DateOnly?>("DataWykonania")
                        .HasColumnType("date")
                        .HasColumnName("Data_wykonania");

                    b.Property<int>("IdZlecenia")
                        .HasColumnType("int")
                        .HasColumnName("Id_zlecenia");

                    b.Property<int?>("Sztuk")
                        .HasColumnType("int");

                    b.Property<string>("Wykonal")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("IdPozycji")
                        .HasName("PK__Rejestra__04BB3C818C437FEF");

                    b.HasIndex("IdZlecenia");

                    b.ToTable("Rejestracja", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.Technologium", b =>
                {
                    b.Property<int>("IdTechnologi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_technologi");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTechnologi"));

                    b.Property<DateTime?>("DataUtworzenia")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_utworzenia");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTechnologi")
                        .HasName("PK__Technolo__ECE48A4CFDB3801A");

                    b.ToTable("Technologia");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Zlecenie", b =>
                {
                    b.Property<int>("IdZlecenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_zlecenia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZlecenia"));

                    b.Property<bool>("Aktywne")
                        .HasColumnType("bit");

                    b.Property<int>("IdTechnologi")
                        .HasColumnType("int")
                        .HasColumnName("Id_technologi");

                    b.HasKey("IdZlecenia")
                        .HasName("PK__Zlecenie__4FF1DFCEB8CCD08B");

                    b.HasIndex("IdTechnologi");

                    b.ToTable("Zlecenie", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.Zlecenie_TT", b =>
                {
                    b.Property<int>("IdPozycji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Position_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPozycji"));

                    b.Property<bool>("Aktywne")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<int>("IdNarzedzia")
                        .HasColumnType("int")
                        .HasColumnName("Tool_Id");

                    b.Property<int>("IdZlecenia")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.HasKey("IdPozycji")
                        .HasName("PK_OrderTT");

                    b.HasIndex("IdZlecenia");

                    b.ToTable("OrderTT", (string)null);
                });

            modelBuilder.Entity("Tool_Menagement.Models.Magazyn", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Narzedzie", "IdNarzedziaNavigation")
                        .WithMany("Magazyns")
                        .HasForeignKey("IdNarzedzia")
                        .IsRequired()
                        .HasConstraintName("rST_MagazynNarzedzie");

                    b.Navigation("IdNarzedziaNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.NarzedziaTechnologium", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Narzedzie", "IdNarzedziaNavigation")
                        .WithMany("NarzedziaTechnologia")
                        .HasForeignKey("IdNarzedzia")
                        .IsRequired()
                        .HasConstraintName("rST_Narzedzia_TechnologiaNarzedzie");

                    b.HasOne("Tool_Menagement.Models.Technologium", "IdTechnologiNavigation")
                        .WithMany("NarzedziaTechnologia")
                        .HasForeignKey("IdTechnologi")
                        .IsRequired()
                        .HasConstraintName("rST_Narzedzia_TechnologiaTechnologia");

                    b.Navigation("IdNarzedziaNavigation");

                    b.Navigation("IdTechnologiNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Narzedzie", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Kategorium", "IdKategoriiNavigation")
                        .WithMany("Narzedzies")
                        .HasForeignKey("IdKategorii")
                        .IsRequired()
                        .HasConstraintName("rST_NarzedzieKategoria");

                    b.Navigation("IdKategoriiNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Rejestracja", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Zlecenie", "IdZleceniaNavigation")
                        .WithMany("Rejestracjas")
                        .HasForeignKey("IdZlecenia")
                        .IsRequired()
                        .HasConstraintName("rST_ZlecenieRejestracja");

                    b.Navigation("IdZleceniaNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Zlecenie", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Technologium", "IdTechnologiNavigation")
                        .WithMany("Zlecenies")
                        .HasForeignKey("IdTechnologi")
                        .IsRequired()
                        .HasConstraintName("rST_ZlecenieTechnologia");

                    b.Navigation("IdTechnologiNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Zlecenie_TT", b =>
                {
                    b.HasOne("Tool_Menagement.Models.Zlecenie", "IdZlecenieNavigation")
                        .WithMany("ZlecenieTT")
                        .HasForeignKey("IdZlecenia")
                        .IsRequired()
                        .HasConstraintName("rST_OrderTT_Zlecenie");

                    b.Navigation("IdZlecenieNavigation");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Kategorium", b =>
                {
                    b.Navigation("Narzedzies");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Narzedzie", b =>
                {
                    b.Navigation("Magazyns");

                    b.Navigation("NarzedziaTechnologia");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Technologium", b =>
                {
                    b.Navigation("NarzedziaTechnologia");

                    b.Navigation("Zlecenies");
                });

            modelBuilder.Entity("Tool_Menagement.Models.Zlecenie", b =>
                {
                    b.Navigation("Rejestracjas");

                    b.Navigation("ZlecenieTT");
                });
#pragma warning restore 612, 618
        }
    }
}
